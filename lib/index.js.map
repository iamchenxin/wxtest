{"version":3,"sources":["index.js"],"names":["express","require","app","setEncode","base","path","tmpdir","subPath","resolve","paths","set","get","req","res","send","logStr","writeFile","str","readFile","data","name","age","console","log","jsonp","listen"],"mappings":";;AAWA;;AAEA;;;;AAXA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAQA,MAAMC,MAAMF,SAAZ;;AAEA,OAAGG,SAAH,CAAa,MAAb;;AAEA,MAAMC,OAAOH,QAAQ,mBAAR,CAAb;AACA,MAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,SAASK,MAAT,CAAgBC,OAAhB,EAAyB;AACvB,SAAOF,KAAKG,OAAL,CAAaJ,KAAKK,KAAL,CAAWH,MAAxB,EAAgCC,OAAhC,CAAP;AACD;AACDL,IAAIQ,GAAJ,CAAQ,aAAR,EAAuB,IAAvB;AACAR,IAAIQ,GAAJ,CAAQ,cAAR,EAAwB,KAAxB;AACAR,IAAIS,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAuBC,GAAvB,EAA4B;AACvCA,MAAIC,IAAJ,CAAS,cAAT;AACA,QAAMC,SAAU,UAAQ,uBAAWH,GAAX,CAAgB,KAAxC;AACA,SAAGI,SAAH,CAAaV,OAAO,KAAP,CAAb,EAA4BS,MAA5B;AACD,CAJD;;AAMAb,IAAIS,GAAJ,CAAQ,MAAR;AAAA,+BAAgB,WAAOC,GAAP,EAAsBC,GAAtB,EAAyC;AACvD,UAAMI,MAAM,MAAM,OAAGC,QAAH,CAAYZ,OAAO,KAAP,CAAZ,CAAlB;AACAO,QAAIC,IAAJ,CAASG,GAAT;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKAf,IAAIS,GAAJ,CAAQ,OAAR,EAAiB,CAACC,GAAD,EAAgBC,GAAhB,KAAmC;AAClD,QAAMM,OAAO;AACXC,UAAM,IADK;AAEXC,SAAK;AAFM,GAAb;AAIAC,UAAQC,GAAR,CAAYrB,IAAIS,GAAJ,CAAQ,qBAAR,CAAZ;AACAT,MAAIQ,GAAJ,CAAQ,qBAAR,EAA+B,IAA/B;AACAR,MAAIQ,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;AACAG,MAAIW,KAAJ,CAAUL,IAAV;AACD,CATD;;AAWAjB,IAAIuB,MAAJ,CAAW,KAAX,EAAkB,YAAW;AAC3BH,UAAQC,GAAR,CAAY,sCAAZ;AACD,CAFD","file":"index.js","sourcesContent":["// @flow\n\nconst express = require('express');\nimport type {\n    $Application,\n    $Request,\n    $Response,\n    Middleware,\n    NextFunction\n} from 'express';\nconst app = express();\nimport { fs } from './utils/fs.js';\nfs.setEncode('utf8');\nimport { JSONstring, format, formatProp } from './utils/tools.js';\nconst base = require('../config/base.js');\nconst path = require('path');\nfunction tmpdir(subPath) {\n  return path.resolve(base.paths.tmpdir, subPath);\n}\napp.set('trust proxy', true);\napp.set('x-powered-by', false);\napp.get('/', function(req:$Request, res) {\n  res.send('Hello World!');\n  const logStr = `req:\\n${formatProp(req)}\\n`;\n  fs.writeFile(tmpdir('log'), logStr);\n});\n\napp.get('/log', async (req: $Request, res: $Response) => {\n  const str = await fs.readFile(tmpdir('log'));\n  res.send(str);\n});\n\napp.get('/json', (req: $Request, res: $Response) => {\n  const data = {\n    name: '德华',\n    age: 18,\n  };\n  console.log(app.get('jsonp callback name'));\n  app.set('jsonp callback name', 'cb');\n  app.set('json spaces', 8);\n  res.jsonp(data);\n});\n\napp.listen(18801, function() {\n  console.log('Example app listening on port 18801!');\n});\n"],"sourceRoot":"/home/iamchenxin/project/workout/wxtest/src"}